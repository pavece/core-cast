services:
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z-cpuv1 #This version includes the legacy web console, good for rebugging. Update to latest / use other object store for production
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000 # API
      - 9001:9001 # Web UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - ./minio-data:/data

  redis:
    image: redis:7-alpine
    command: ['redis-server', '--appendonly', 'yes', '--requirepass', 'redis']
    ports:
      - 9002:6379
    volumes:
      - ./redis-data:/data

  postgres:
    image: postgres:17
    ports:
      - 5431:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: core-cast
    networks:
      - admin
    volumes:
      - ./pg-data:/var/lib/postgresql/data

  rabbit-mq:
    image: rabbitmq:4-management
    ports:
      - 5672:5672 # Do NOT expose without authenticatiuon properly configured
      - 9091:15672 # Do NOT expose (.)

  melisearch:
    image: getmeili/meilisearch:v1.15
    environment:
      - MEILI_MASTER_KEY=masterKey
    ports:
      - 7700:7700
    volumes:
      - ./meili-data:/meili_data

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    volumes:
      - ./qdrant-data:/qdrant/stor

  # OPTIONAL: Explorer for postgreSQL
  adminer:
    image: adminer
    ports:
      - 9090:8080
    networks:
      - admin

  # OPTIONAL: Explorer for meilisearch
  # docker run -d --restart=on-failure:5 --name="meilisearch-ui" -p <your-port>:24900 -e BASE_PATH="/meilisearch-ui" riccoxie/meilisearch-ui:lates
  meilisearch-ui:
    image: riccoxie/meilisearch-ui:latest
    environment:
      - BASE_PATH=/meilisearch-ui
    ports:
      - 24900:24900

networks:
  admin:
